import pandas as pd
from datetime import datetime
from utils import escape_markdown
import time
import schedule


def send_custom_sticker(bot,user_id):
    sticker_id ='CAACAgIAAxkBAAELEUFnZVbDgJQqofUSb5OD-gsWr5VCXgACoxAAAvF3qEh-OxgSw5fVQTYE'
    bot.send_sticker(chat_id=user_id, sticker=sticker_id)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∏–±–ª–∏–∂–∞—é—â–∏–π—Å—è –¥–µ–¥–ª–∞–π–Ω –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
def check_deadlines_and_notify(df, bot, user_id):
    # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ (—Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è)
    today = datetime.now().date()
    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–µ–¥–ª–∞–π–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞ –æ—Å—Ç–∞–µ—Ç—Å—è 1 –¥–µ–Ω—å
    for _, row in df.iterrows():
        status = row.iloc[23]  # –°—Ç–æ–ª–±–µ—Ü —Å —Å—Ç–∞—Ç—É—Å–æ–º (Unnamed: 23)
        if status != "–í —Ä–∞–±–æ—Ç–µ":
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
        deadline_str = row.iloc[29]  # –°—Ç–æ–ª–±–µ—Ü —Å –¥–µ–¥–ª–∞–π–Ω–∞–º–∏ (Unnamed: 29)
        # –ï—Å–ª–∏ –¥–µ–¥–ª–∞–π–Ω —É–∂–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–∞—Ç—ã (Timestamp), –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ —Å—Ç—Ä–æ–∫—É
        if isinstance(deadline_str, pd.Timestamp):
            deadline_str = deadline_str.strftime('%d.%m.%Y')
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –¥–∞—Ç—É
        try:
            deadline = datetime.strptime(deadline_str, '%d.%m.%Y').date()
        except ValueError:
            continue  # –ï—Å–ª–∏ –¥–∞—Ç–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        # –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –∏ –¥–µ–¥–ª–∞–π–Ω–æ–º
        days_left = (deadline - today).days
        # –ï—Å–ª–∏ –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞ –æ—Å—Ç–∞–µ—Ç—Å—è 1 –∏–ª–∏ –º–µ–Ω—å—à–µ –¥–Ω—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        if 0 < days_left <= 3:
            send_custom_sticker(bot,user_id)
            if days_left == 1:
                day = '–¥–µ–Ω—å'
            elif 2 <= days_left <= 4:
                day = '–¥–Ω—è'
            elif days_left >= 5 or days_left == 0:
                day = '–¥–Ω–µ–π'
            else:
                day = '–¥–µ–Ω—å'  # –î–ª—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª (–∫–æ–≥–¥–∞ –¥–µ–¥–ª–∞–π–Ω –ø—Ä–æ—à–µ–ª)
            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            comm = '*–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π*:'
            sms = f"{escape_markdown('üö®–í–Ω–∏–º–∞–Ω–∏–µüö®')}\n"
            sms += f"{escape_markdown('–ü—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è –¥–µ–¥–ª–∞–π–Ω –¥–ª—è –∑–∞–¥–∞—á–∏ —Å –Ω–æ–º–µ—Ä–æ–º')}\n"
            sms += f"{escape_markdown(f'{row.iloc[0]}')} \n"
            sms += f"{escape_markdown(f'–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: {days_left} {day}.')}\n\n"
            sms += f"*–í—Ä–µ–º—è –ø–æ–¥–∞—á–∏*: {escape_markdown(str(row['Unnamed: 2']))}\n"  # –í—Ä–µ–º—è –ø–æ–¥–∞—á–∏
            sms += f"*–î–∞—Ç–∞ –¥–µ–¥–ª–∞–π–Ω–∞*: {escape_markdown(str(row['Unnamed: 29']))}\n"  # –î–µ–¥–ª–∞–π–Ω
            sms += f"*–ê–¥—Ä–µ—Å*: {escape_markdown(str(row['–ê–¥—Ä–µ—Å –¥–æ–º–∞/—Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è']))}, {escape_markdown(str('–ö–≤.'))} {escape_markdown(str(row['–ù–æ–º–µ—Ä –ø–æ–º–µ—â–µ–Ω–∏—è']))}\n"
            sms += f"*–§–ò–û*: {escape_markdown(str(row['–§–∞–º–∏–ª–∏—è (–¥–ª—è –§–õ)']))} {escape_markdown(str(row['–ò–º—è (–¥–ª—è –§–õ)']))} {escape_markdown(str(row['–û—Ç—á–µ—Å—Ç–≤–æ (–¥–ª—è –§–õ)']))}\n"
            sms += f"*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞*: {escape_markdown('+' + str(row['–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞']).replace(' ', ''))}\n"
            sms += f"*–ü–æ—á—Ç–∞*: {escape_markdown(str(row['E-mail']))}\n"
            sms += f"*–ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–∞*: {escape_markdown(str(row['Unnamed: 4']))}\n"
            sms += "*–ö–∞—Ç–µ–≥–æ—Ä–∏–∏*: {0}\n".format(escape_markdown(str(row['Unnamed: 24']).split('\n')[0]))  # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
            sms += f"{comm}\n"
            try:
                sms += "{0}\n".format(escape_markdown(str(row['Unnamed: 24']).split('\n')[2]))
            except IndexError:
                pass
            sms += f"*–°—Ç–∞—Ç—É—Å*: {row['Unnamed: 23']}\n"  # –í—ã–ø–æ–ª–Ω–µ–Ω–æ/–≤ —Ä–∞–±–æ—Ç–µ
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            try:
                bot.send_message(user_id, sms, parse_mode="MarkdownV2")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

"""
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–¥–ª–∞–π–Ω–æ–≤ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
def schedule_deadline_check(df, bot, user_id):
    while True:
        check_deadlines_and_notify(df, bot, user_id)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–¥–ª–∞–π–Ω–æ–≤
        time.sleep(100)
"""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–¥–ª–∞–π–Ω–æ–≤
def schedule_deadline_check(df, bot, user_id):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–¥–ª–∞–π–Ω–æ–≤ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
    schedule.every().day.at("09:30").do(check_deadlines_and_notify, df=df, bot=bot, user_id=user_id)
    while True:
        schedule.run_pending()  # –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
        time.sleep(60)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

